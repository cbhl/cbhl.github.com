<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mathNEWS | azure sky]]></title>
  <link href="http://blog.azuresky.ca/blog/categories/mathnews/atom.xml" rel="self"/>
  <link href="http://blog.azuresky.ca/"/>
  <updated>2012-04-14T19:25:22+00:00</updated>
  <id>http://blog.azuresky.ca/</id>
  <author>
    <name><![CDATA[Michael Chang]]></name>
    <email><![CDATA[michael.chang@azuresky.ca]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Investigating the Root Causes of Failure: Part 2]]></title>
    <link href="http://blog.azuresky.ca/blog/2012/04/investigating-the-root-causes-of-failure-part-2/"/>
    <updated>2012-04-01T15:50:00+00:00</updated>
    <id>http://blog.azuresky.ca/blog/2012/04/investigating-the-root-causes-of-failure-part-2</id>
    <content type="html"><![CDATA[<p>_I originally wrote this article for</p>

<!-- [Volume 118, Issue 6](http://mathnews.uwaterloo.ca/wordpress/?p=2696) -->


<p><a href="http://mathnews.uwaterloo.ca/">Volume 118, Issue 6</a> of mathNEWS._</p>

<p>We see that in [1], Kalpin continues to detail his wild and unscientific
proposals for the post-secondary school system. While it's apparent that Kalpin
is clearly unqualified to be proposing such changes, we also note that there are
any details that need to be worked out in his proposal.</p>

<p>Kalpin notes that secondary school is unable "to adequately direct students to a
correct post-secondary path" and unable to prepare students for post-secondary
education. His approach, dividing students into four streams in 9th grade, is
clearly out of touch with the issues plaguing "typical" high school students.</p>

<p>The ministry of education itself notes in [2] that in 2003-2004, nearly 1 in 3
students failed to complete a secondary school diploma, let alone advance to
university. For the 2009-2010 year, that has only improved to 1 in 5 students.
This means that nearly 20% of students will be forced to navigate the world with
whatever skills that, at worst, they have acquired in elementary school.</p>

<p>Kalpin introducing integrals and linear algebra into the high school curriculum,
where students already struggle with the pace at which concepts are introduced.
While the secondary school system once did introduce such concepts, they did so
when OAC, the fifth year of high school, still existed, and there was sufficient
time for high-school students to absorb such concepts and still be well-rounded
when they graduated. Introducing such concepts to the exclusion of other classes
(such as Computer Science or Visual Arts) could severely hinder a student's
ability to apply the results of upper-year courses like CS 488/688.</p>

<p>Kalpin proposes two radical changes to provide enough funding for his radical
changes: the abolishment of the Catholic school system, and the removal of
all-day kindergarten. We note that many the Catholic school system, arguably, is
better able to promote STEM (Science, Technology, Engineering, and Mathematics)
skills in young children -- as demonstrated by the sheer number of catholic
(and, for that matter, french immersion) schools that participate in STEM
programs such as the FIRST Lego League and FIRST Robotics Competition, compared
to the number of public schools that do so.</p>

<p>With regards to the removal of all-day kindergarten, we note that all-day
kindergarten gives one more time to build social and soft skills in early
childhood, where early childhood educators can intervene as necessary.
Underdeveloped soft skills are a leading rationale for programs such as PDEng.
Besides, wouldn't you love more time to play with your friends?</p>

<p>Once again, we note how unfeasible such broad sweeping changes would be.
Instead, I repeat my plea for disruptive changes to education from the bottom
up. Apply for a Winter 2013 internship with the Khan Academy. Apply to
Desire2Learn on JobMine. Apply to VeloCity, and disrupt the world with your own
startup in the education industry.</p>

<p>Something more than just writing a whiny article in the paper. <em>Anything.</em>
Please. I've done my part; and I hope you'll do yours.</p>

<p>!able</p>

<p>[1] J. Kalpin, "Why High School is Too Easy Part 2: Fixes to the System," The
Iron Warrior, vol. 33, no. 5, pp. 9, Mar. 2012.</p>

<p>[2] http://www.edu.gov.on.ca/eng/document/nr/11.03/bg0308.html</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Investigating the Root Causes of Failure]]></title>
    <link href="http://blog.azuresky.ca/blog/2012/03/investigating-the-root-causes-of-failure/"/>
    <updated>2012-03-17T03:00:00+00:00</updated>
    <id>http://blog.azuresky.ca/blog/2012/03/investigating-the-root-causes-of-failure</id>
    <content type="html"><![CDATA[<p><em>I originally wrote this article for
<a href="http://mathnews.uwaterloo.ca/wordpress/?p=2464">Volume 118, Issue 5</a>
of mathNEWS.</em></p>

<p>Like it or not, University acts as a filter. Upper-year classes are often hollow shells of their first-year selves, as students are hemorrhaged over the terms. In [1], Kalpin argues that students' failures are the result of an inadequate secondary school system. In this article, we hope to propose alternate hypotheses and paradigms for this "problem".</p>

<p>First, we note that Kalpin's argument considers a specific case, and does not consider students who do not enter the University from an Ontario High School. In particular, a number of students are admitted from other post-secondary institutions, CEGEP, other provinces, and from abroad. Without demonstrable evidence that these groups are doing better than students who enter immediately after obtaining their OSSD, it's hard to conclude that the school system is at fault.</p>

<p>We again note that Kalpin's argument considers a specific case, and does not consider the effects of early childhood learning and reinforcement. In [2], Bronson summarizes the result of a paper out of Columbia, noting that students who are told they are "smart" would avoid risk-taking and were less able to recover after failure. Arguably, this, as much as exposure to difficult concepts in high school, could have a huge effect on students ability to recover after, say, failing a midterm or assignment.</p>

<p>In [3], Roman discusses how preconceptions developed in high school can interfere with students ability to develop their mental model of programming and with computers. We note that Kalpin is not required to take Scheme, as a result of curriculum changes in the Software Engineering program, and thus may not yet realize the benefits of exposure to functional programming, or the paradigm shifts required to write code in a functional style after having programmed imperatively for many months.</p>

<p>Finally, I'd like to explore some potential solutions to the issues presented by Kalpin in [1]. Many students encounter difficulty at all grades as a result of a poor understanding of the fundamentals -- it's not uncommon to send a student on their merry way if they get a 60% tests on addition or multiplication in second or third grade. If a student only understands 60% of multiplication, how do we expect them to understand integration, differentiation, or for that matter, feedback control systems? Self-paced learning and review from organizations such as Udacity, MITx, and Khan Academy can help students review the basics, so that they'll be better prepared for the real learning, thinking, and innovation that can happen here.</p>

<p>Realistically, innovation is what we want here. I highly doubt that Kalpin will be able to gain enough political support in order to dictate policy changes to the Minstry of Education. Instead, it makes more sense to disrupt education from the bottom up -- schools are starting to realize that YouTube can be a useful learning resource, and at Waterloo we really do have an opportunity to make the future better for incoming students, and, eventually, for our own children. Don't think that level of disruption is out of your grasp -- in [4], one Waterloo student has already documented how he's changed the world of education.</p>

<p>How will you change the world today?</p>

<p style="text-align: right">!able</p>


<p>[1] J. Kalpin, "Why High School is Too Easy," <em>The Iron Warrior</em>, vol. 33, no. 4, pp. 10, Mar. 2012.</p>

<p>[2] P. Bronson. (2007, Feb. 11). <em>How Not to Talk to Your Kids</em> [Online]. Available:
<a href="http://nymag.com/news/features/27840/">http://nymag.com/news/features/27840/</a></p>

<p>[3] Roman. (2008, Oct. 9). <em>The Disadvantages of High School Programming</em> [Online]. Available:
<a href="http://compsci.ca/blog/the-disadvantages-of-high-school-programming">http://compsci.ca/blog/the-disadvantages-of-high-school-programming/</a></p>

<p>[4] D. Hu. (2012, Jan. 2). <em>My Internship at Khan Academy</em> [Online]. Available:
<a href="http://www.youtube.com/watch?v=fUiHSaoXQOs">http://www.youtube.com/watch?v=fUiHSaoXQOs</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Really Wish I Knew In 1B]]></title>
    <link href="http://blog.azuresky.ca/blog/2012/02/what-i-really-wish-i-knew-in-1b/"/>
    <updated>2012-02-11T11:13:00+00:00</updated>
    <id>http://blog.azuresky.ca/blog/2012/02/what-i-really-wish-i-knew-in-1b</id>
    <content type="html"><![CDATA[<p><em>I originally wrote this article for
<a href="http://mathnews.uwaterloo.ca/wordpress/?p=1809">Volume 118, Issue 3</a>
of mathNEWS.</em></p>

<h2>Sleep is Important</h2>

<p>It's easy to get caught up in interviews, assignments, projects,
midterms, and late nights playing board games. Don't forget to sleep!
As much as your friends may brag about getting through the week on
three hours of sleep, you'll be much more productive if your manage
your energy and get enough sleep through the week.</p>

<h2>Find Your Passion</h2>

<p>You will find many opportunities to make decisions in your life. You might
be choosing between sleeping or studying for another three hours, between
a co-op opportunity in the San Francisco Bay Area or a co-op opportunity
in Kitchener, or between pasta or breaded fish at the cafeteria.</p>

<p>So why are you wasting your time doing things you don't like and that
won't take you a step closer to reaching your goals? When you put down
this paper, go do something that will make your life better.</p>

<h2>Don't Date Someone From Your Cohort</h2>

<p>If you are (un)fortunate enough to be in a program with a cohort, think
<strong>very carefully</strong> before dating someone in your class. There are so many
ways it could end horribly. I'll let your imagination run wild here.</p>

<h2>Volunteering</h2>

<p>If you were one of the people who enjoyed volunteering in high school,
don't just give up on it now that you're here! Even if you're not in
Engineering, WE-Connect, part of Waterloo Engineering Outreach, is
involved with many events where you can get involved. Every year,
volunteers are needed for the FIRST Lego League and the FIRST Robotics
Regional Competition on campus. Become an Orientation leader. Start a
business on campus. Run for student government. Get involved!</p>

<h2>Internet</h2>

<p>Whenever you go on Facebook, Twitter, or OMGUW, remember that you're
representing the university - whether you like it or not. We'll have to
see whether we're going to clamp down and not put anything on the
Internet, or whether we're going to accept that people do stupid things
and that it's funny. Until then, think before you post.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[zsync: client-side rsync over HTTP]]></title>
    <link href="http://blog.azuresky.ca/blog/2012/01/zsync-client-side-rsync-over-http/"/>
    <updated>2012-01-27T05:03:00+00:00</updated>
    <id>http://blog.azuresky.ca/blog/2012/01/zsync-client-side-rsync-over-http</id>
    <content type="html"><![CDATA[<p> <em>I originally wrote this article for Volume 118, Issue 2 of mathNEWS.</em></p>

<p>I wonder when 4 GB+ virtual machine images became the norm in CS classes at this institution, but it's clear that the network infrastructure outside of campus is clearly not ready to handle dozens of students downloading such large files all at once.</p>

<p>zsync is a tool that uses the rsync algorithm to download a file from a server, but with pre-computed metadata to help the algorithm scale well (and run over regular web servers). This allows users to resume incomplete downloads and verify your file is complete in one step. Packages may be available for your Linux distribution of choice. As of the time of writing, it's available on homebrew (Mac) and Cygwin (Windows) as well. Sources can also be downloaded from <a href="http://zsync.moria.org.uk/downloads">http://zsync.moria.org.uk/downloads</a>.</p>

<p>I first ran into zsync when I was downloading a Ubuntu release, and I've started using it over jigdo.</p>

<p>For TAs and support staff, making content available by zsync is straightforward. Simply run:</p>

<p><code>zsyncmake -C -e -u <em>&lt;url&gt;</em> <em>&lt;file&gt;</em></code></p>

<p>For example, for the CS 136 VM, one could run:</p>

<p><code>zsyncmake -C -e -u http://www.student.cs.uwaterloo.ca/~cs136/VirtualMachine/CS136.ova ~cs136/public_html/VirtualMachine/CS136.ova</code></p>

<p>This creates a <em>&lt;file&gt;.zsync</em> file containing metadata and checksums which the zsync client can use. Simply make this file available in public_html (perhaps in the same folder as the Open Virtualization Archive (OVA) itself).</p>

<p>For students, once zsync is installed, downloading a file is as simple as</p>

<p><code>zsync <em>&lt;url&gt;</em></code></p>

<p>Where <em>&lt;url&gt;</em> is the URL of the .zsync metadata file. The man page contains details on other flags, which may be useful if you are resuming an incomplete download or trying to sync from a file with a different name and similar contents (e.g. a previous version of a virtual machine).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Software Engineers Attend Conference]]></title>
    <link href="http://blog.azuresky.ca/blog/2012/01/software-engineers-attend-conference/"/>
    <updated>2012-01-27T05:03:00+00:00</updated>
    <id>http://blog.azuresky.ca/blog/2012/01/software-engineers-attend-conference</id>
    <content type="html"><![CDATA[<p> <em>I originally wrote this article for Volume 118, Issue 2 of mathNEWS.</em></p>

<p>Last week, nearly two dozen students represented Waterloo at the Canadian Undergraduate Software Engineering Conference (CUSEC) in Montreal, Quebec. In between shivering through the Montreal Winter, discovering the RESO (underground city), and trying to help egg-cat with their homework assignments, we absorbed knowledge from the following speakers:</p>

<p><strong>Alexis Ohanian</strong>, founder of Reddit, spoke about progress made against SOPA/PIPA; how it is the World's Internet, not America's Internet; how the fight isn't nearly over yet.</p>

<p><strong>Jeremy Ashkenas</strong>, creator of CoffeeScript, argued the case for code as an art form, rather than just a process to be engineered.</p>

<p><strong>Greg Kroah-Hartman</strong>, Linux kernel developer, talked about how big the kernel is, how much it changes every day, and how to get involved contributing patches as a kernel newbie.</p>

<p><strong>Bret Victor</strong>, known for designing experimental UI concepts at Apple, discussed how current code-compile-debug cycles require the programmer to execute code in one's head, and that the latency of interaction for developers makes it difficult to discover novel things about code. He also demoed a real-time JavaScript IDE concept that updated a canvas in real time, allowed <a href="http://worrydream.com/ScrubbingCalculator/">variables' values to be tweaked by dragging sliders</a>, and displayed the <a href="http://worrydream.com/LadderOfAbstraction/">trajectory of a player across time</a>. He then spoke about having a guiding principle, gave examples of historical figures with guiding principles, and then discussed the pros and cons of living by your own guiding principle -- to a standing ovation.</p>

<p><strong>Manveer Heir</strong>, Senior Designer at BioWare, warned everyone sternly to stay as far away from the game industry as possible -- before telling those who remained how to get in, and what it's like in the industry.</p>

<p>In between speakers, we ran around handing out resumes and making pleasant conversation, rode up and down the hotel elevators, and talked in our sleep. We played chess amongst ourselves at games night, taught the first-years how to tip at a pub, and made it back to Waterloo.</p>

<p>Now for a week of catching up on assignments and studying for quizzes.</p>

<p>Maybe we'll actually get a chance to pay back some of our sleep debt. Next week.</p>
]]></content>
  </entry>
  
</feed>
